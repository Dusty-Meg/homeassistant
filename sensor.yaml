##############################################################
## Sensor  ##
##############################################################

        ##########################################################
        ## Weather
        ##########################################################

  - platform: darksky
    api_key: !secret darksky_api_key
    monitored_conditions:
      - summary
      - temperature
      - hourly_summary
      - temperature_max
      - wind_speed
      - humidity
      - pressure
      - temperature_min
      - precip_intensity
      - icon

        ##########################################################
        ## PiHole
        ##########################################################

  - platform: pi_hole
    host: !secret pihole_host
    monitored_conditions:
      - ads_blocked_today
      - ads_percentage_today
      - dns_queries_today

        ##########################################################
        ## HA Instance
        ##########################################################

  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: Current HA Release
    scan_interval: 3600

  - platform: command_line
    command: /srv/homeassistant/bin/hass --version
    name: Installed HA Version
    scan_interval: 3600

  - platform: command_line
    command: /home/homeassistant/.homeassistant/check_db_size.sh
    name: HA DB Size
#    scan_interval: 300
    unit_of_measurement: "GB"

  - platform: command_line
    name: CPU Temp
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'

  - platform: command_line
    name: "HA Last Reboot"
    command: cat /proc/uptime | awk '{printf "%0.f", $1}'
    scan_interval: 60
    value_template: >-
      {% set uptime = value | int %}
      {% set seconds = uptime % 60 %}
      {% set minutes = ((uptime % 3600) / 60) | int %}
      {% set hours = ((uptime % 86400) / 3600) | int %}
      {% set days = (uptime / 86400) | int %}
      {%- if days > 0 -%}
        {%- if days == 1 -%}
          1 day
        {%- else -%}
          {{ days }} days
        {%- endif -%}
        {{ ', ' }}
      {%- endif -%}
      {{ '%02d' % hours }}:{{ '%02d' % minutes }}

  - platform: command_line
    name: "HA Uptime"
    command: echo "$(($(date +%s) - $(date -d "$(head -n1 /home/homeassistant/.homeassistant/home-assistant.log | cut -d' ' -f-2)" +%s)))"
    scan_interval: 60
    value_template: >-
      {% set uptime = value | int %}
      {% set seconds = uptime % 60 %}
      {% set minutes = ((uptime % 3600) / 60) | int %}
      {% set hours = ((uptime % 86400) / 3600) | int %}
      {% set days = (uptime / 86400) | int %}
      {%- if days > 0 -%}
        {%- if days == 1 -%}
          1 day
        {%- else -%}
          {{ days }} days
        {%- endif -%}
        {{ ', ' }}
      {%- endif -%}
      {{ '%02d' % hours }}:{{ '%02d' % minutes }}

  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: processor_use

  - platform: command_line
    name: SSL Cert Expiration
    unit_of_measurement: days
    scan_interval: 3600
    command: "ssl-cert-check -b -c /home/homeassistant/.homeassistant/REDACTED.pem | awk '{ print $NF }'"

        ##########################################################
        ## Birthdays
        ##########################################################

  - platform: command_line
    name: Birthday Countdown userthree
    unit_of_measurement: days
    scan_interval: 3600
    command: "BDAY=`date -d REDACTED +%j`; TODAY=`date +%j`; DAYS=$(($BDAY - $TODAY)); echo $DAYS"

  - platform: command_line
    name: Birthday Countdown userfour
    unit_of_measurement: days
    scan_interval: 3600
    command: "BDAY=`date -d REDACTED +%j`; TODAY=`date +%j`; DAYS=$(($BDAY - $TODAY)); echo $DAYS"

  - platform: command_line
    name: Birthday Countdown usertwo
    unit_of_measurement: days
    scan_interval: 3600
    command: "BDAY=`date -d REDACTED +%j`; TODAY=`date +%j`; DAYS=$(($BDAY - $TODAY)); echo $DAYS"

  - platform: command_line
    name: Birthday Countdown userone
    unit_of_measurement: days
    scan_interval: 3600
    command: "BDAY=`date -d REDACTED +%j`; TODAY=`date +%j`; DAYS=$(($BDAY - $TODAY)); echo $DAYS"

        ##########################################################
        ## Sensor Node 1 - Office
        ##########################################################

  - platform: mqtt
    state_topic: "ntalekt/sensornode1"
    name: "Office Humidity"
    unit_of_measurement: "%"
    value_template: '{{ value_json.humidity | round(1) }}'

#  - platform: mqtt
#    state_topic: "ntalekt/sensornode1"
#    name: "Office LDR"
    ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
#    unit_of_measurement: "LUX"
#    force_update: true
#    value_template: '{{ value_json.ldr }}'

  - platform: mqtt
    state_topic: "ntalekt/sensornode1"
    name: "Office PIR"
    value_template: '{{ value_json.motion }}'

  - platform: mqtt
    state_topic: "ntalekt/sensornode1"
    name: "Office Temperature"
    unit_of_measurement: "°F"
    value_template: '{{ value_json.temperature | round(1) }}'

        ##########################################################
        ## Doorbell
        ##########################################################

  - platform: ring
    monitored_conditions:
      - last_activity
      - last_ding
      - last_motion
      - wifi_signal_category
      - wifi_signal_strength
      - volume

        ##########################################################
        ## Deluge
        ##########################################################

  - platform: deluge
    host: !secret deluge_pi_host
    username: !secret deluge_user
    password: !secret deluge_pass
    monitored_variables:
#      - 'current_status'
      - 'download_speed'
      - 'upload_speed'

        ##########################################################
        ## NAS
        ##########################################################

  - platform: synologydsm
    host: !secret nas_host
    username: !secret nas_username
    password: !secret nas_pass
    monitored_conditions:
      - cpu_total_load
      - memory_real_usage
      - network_up
      - network_down
      - volume_status
      - volume_percentage_used
      - volume_size_used

  - platform: qnap
    host: !secret nas2_host
    username: !secret nas_username
    password: !secret nas_pass
    nics: eth0
    monitored_conditions:
      - status
      - memory_percent_used
      - cpu_usage
      - cpu_temp
      - network_tx
      - network_rx
      - volume_size_free
      - volume_size_used
      - volume_percentage_used

#  - platform: yahoo_finance
#    symbols:
#      - WFC

#  - platform: coinmarketcap
#    currency: ethereum

#  - platform: coinmarketcap
#    currency: bitcoin

#  - platform: coinmarketcap
#    currency: dash

        ##########################################################
        ## Templates
        ##########################################################

  - platform: template
    sensors:
      dark_sky_temperature_template:
        value_template: "{{ states('sensor.dark_sky_temperature') }}"
        icon_template: >
          {% if is_state('sensor.dark_sky_icon', 'clear-day') %}
            mdi:weather-sunny
          {% elif is_state('sensor.dark_sky_icon', 'clear-night') %}
            mdi:weather-night
          {% elif is_state('sensor.dark_sky_icon', 'rain') %}
            mdi:weather-rainy
          {% elif is_state('sensor.dark_sky_icon', 'snow') %}
            mdi:weather-snowy
          {% elif is_state('sensor.dark_sky_icon', 'sleet') %}
            mdi:weather-snowy-rainy
          {% elif is_state('sensor.dark_sky_icon', 'wind') %}
            mdi:weather-windy-variant
          {% elif is_state('sensor.dark_sky_icon', 'fog') %}
            mdi:weather-fog
          {% elif is_state('sensor.dark_sky_icon', 'cloudy') %}
            mdi:weather-cloudy
          {% elif is_state('sensor.dark_sky_icon', 'partly-cloudy-day') or is_state('sensor.dark_sky_icon', 'partly-cloudy-night') %}
            mdi:weather-partlycloudy
          {% elif is_state('sensor.dark_sky_icon', 'hail') %}
            mdi:weather-hail
          {% elif is_state('sensor.dark_sky_icon', 'thunderstorm') %}
            mdi:weather-lightning
          {% else %}
            mdi:help-circle
          {% endif %}
        friendly_name: "Current Temperature"
        unit_of_measurement: '°F'

      media_center:
        value_template: '{{ states.remote.media_center.attributes.current_activity }}'
        friendly_name: 'Media Center'

      master_remote:
        value_template: '{{ states.remote.master.attributes.current_activity }}'
        friendly_name: 'Master'

      ring_last_ding:
       friendly_name: Last Ding Time
       value_template: "{{ as_timestamp(states.sensor.ring_front_door_last_ding.attributes.created_at) |  timestamp_custom('%D %-I:%M %P') }}"

      ring_last_motion:
       friendly_name: Last Motion Time
       value_template: "{{ as_timestamp(states.sensor.ring_front_door_last_motion.attributes.created_at) |  timestamp_custom('%D %-I:%M %P') }}"

      downstairs_thermostat_away_mode:
       value_template: '{{ states.climate.downstairs.attributes.away_mode }}'

      upstairs_thermostat_away_mode:
       value_template: '{{ states.climate.upstairs.attributes.away_mode }}'

      living_room_temperature:
        value_template: '{{ states.climate.downstairs.attributes.current_temperature }}'
        friendly_name: 'Living Temperature'
        unit_of_measurement: "°F"

      loft_temperature:
        value_template: '{{ states.climate.upstairs.attributes.current_temperature }}'
        friendly_name: 'Loft Temperature'
        unit_of_measurement: "°F"

      userone_phone_battery:
        value_template: '{{ states.device_tracker.useronedevice.attributes.battery | default(0) | int }}'
        friendly_name: 'userone Nexus 6P'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.device_tracker.useronedevice.attributes.battery | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      usertwo_phone_battery:
        value_template: '{{ states.device_tracker.usertwodevice.attributes.battery | default(0) | int }}'
        friendly_name: 'usertwo iPhone X'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.device_tracker.usertwodevice.attributes.battery | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      userone_tablet_battery:
        value_template: '{{ states.device_tracker.mqtt_flounder.attributes.battery | default(0) | int }}'
        friendly_name: 'userone Nexus 9'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.device_tracker.mqtt_flounder.attributes.battery | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      userthree_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001b9561c.attributes.battery_level | default(0) | int }}'
        friendly_name: 'userthree Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001b9561c.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      userfour_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001f50d5f.attributes.battery_level | default(0) | int }}'
        friendly_name: 'userfour Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001f50d5f.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      master_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001fa9e02.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Master Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001fa9e02.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      loft_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001f51e9e.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Loft Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001f51e9e.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      master_switch_battery:
        value_template: '{{ states.binary_sensor.switch_158d0001b86a74.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Master Switch'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.binary_sensor.switch_158d0001b86a74.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      patio_door_battery:
        value_template: '{{ states.binary_sensor.door_window_sensor_158d0001d85176.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Patio Door'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.binary_sensor.door_window_sensor_158d0001d85176.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      big_garage_tilt_battery:
        value_template: '{{ states.zwave.ecolink_tilt_big_garage.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Big Garage Tilt Sensor'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.zwave.ecolink_tilt_big_garage.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) |int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      big_garage_tilt:
        value_template: '{% if is_state("binary_sensor.ecolink_tilt_big_garage_sensor", "on") %}Open{% elif is_state("binary_sensor.ecolink_tilt_big_garage_sensor", "off") %}Closed{% else %}unknown{% endif %}'
        friendly_name: 'Big Garage Status'
        icon_template: >
          {% set big_garage_state = states.binary_sensor.ecolink_tilt_big_garage_sensor.state %}
          {% if big_garage_state == 'on' %}
            mdi:garage-open
          {% elif big_garage_state == 'off' %}
            mdi:garage
          {% else %}
            mdi:alert-outline
          {% endif %}

      patio_door:
        value_template: '{% if is_state("binary_sensor.door_window_sensor_158d0001d85176", "on") %}Open{% elif is_state("binary_sensor.door_window_sensor_158d0001d85176", "off") %}Closed{% else %}unknown{% endif %}'
        friendly_name: 'Patio Door Status'
        icon_template: >
          {% set patio_door_state = states.binary_sensor.door_window_sensor_158d0001d85176.state %}
          {% if patio_door_state == 'on' %}
            mdi:door-open
          {% elif patio_door_state == 'off' %}
            mdi:door-closed
          {% else %}
            mdi:alert-outline
          {% endif %}

      dark_sky_daily_high_low_template:
        value_template: "{{ states('sensor.dark_sky_daily_high_temperature') }} / {{ states('sensor.dark_sky_daily_low_temperature') }}"
        friendly_name: 'High / Low Temperature'
        unit_of_measurement: "°F"

      holidays_calendar:
        friendly_name: 'Upcoming Holiday'
        value_template: '{{ states.calendar.holidays_in_united_states.attributes.message }}'

        ##########################################################
        ## Location
        ##########################################################

  - platform: google_travel_time
    name: usertwo To Home
    api_key: !secret google_travel_api
    origin: !secret device_tracker_usertwo
    destination: zone.home

  - platform: google_travel_time
    name: usertwo To REDACTED
    api_key: !secret google_travel_api
    origin: !secret device_tracker_usertwo
    destination: zone.REDACTED

  - platform: google_travel_time
    name: usertwo To REDACTED
    api_key: !secret google_travel_api
    origin: !secret device_tracker_usertwo
    destination: zone.REDACTED

  - platform: google_travel_time
    name: usertwo To Work
    api_key: !secret google_travel_api
    origin: !secret device_tracker_usertwo
    destination: zone.work
    options:
      departure_time: 07:05:00

  - platform: google_travel_time
    name: userone To Home
    api_key: !secret google_travel_api
    origin: !secret device_tracker_userone
    destination: zone.home

  - platform: google_travel_time
    name: userone To REDACTED
    api_key: !secret google_travel_api
    origin: !secret device_tracker_userone
    destination: zone.REDACTED

  - platform: google_travel_time
    name: userone To REDACTED
    api_key: !secret google_travel_api
    origin: !secret device_tracker_userone
    destination: zone.REDACTED

        ##########################################################
        ## Cox Internet Usage
        ##########################################################

  - platform: file
    name: Cox Utilization
    file_path: /home/homeassistant/.homeassistant/cox_usage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumUsage | int == 0 and value_json.dumLimit | int == 0 and value_json.dumUtilization | int == 0 %}
          stats unavailable
        {% else %}
          {{ value_json.dumUsage | int }} / {{ value_json.dumLimit | int }} GB ({{ value_json.dumUtilization | int }} %)
        {% endif %}
      {% else %}
        undefined
      {% endif %}

  - platform: file
    name: Cox Time Left
    file_path: /home/homeassistant/.homeassistant/cox_usage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumDaysLeft is defined %}
          {{ value_json.dumDaysLeft | int }}
        {% else %}
          unknown
        {% endif %}
      {% else %}
        undefined
      {% endif %}
    unit_of_measurement: "Days"

  - platform: file
    name: Cox Avg GB Current
    file_path: /home/homeassistant/.homeassistant/cox_usage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumUsage | int == 0 and value_json.dumDaysLeft | int == 0 %}
          stats unavailable
        {% elif states.sensor.days_in_current_month.state is defined %}
          {{ (float(value_json.dumUsage) / (float(states.sensor.days_in_current_month.state) - float(value_json.dumDaysLeft))) | round(1) }}
        {% else %}
          month_undefined
        {% endif %}
      {% else %}
        undefined
      {% endif %}
    unit_of_measurement: "GB per day"

  - platform: file
    name: Cox Avg GB Remaining
    file_path: /home/homeassistant/.homeassistant/cox_usage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumLimit | int == 0 and value_json.dumUsage | int == 0 and value_json.dumDaysLeft | int == 0 %}
          stats unavailable
        {% elif value_json.dumDaysLeft | int == 0 %}
          {{ (float(value_json.dumLimit) - float(value_json.dumUsage)) | round(1) }}
        {% else %}
          {{ ((float(value_json.dumLimit) - float(value_json.dumUsage)) / float(value_json.dumDaysLeft)) | round(1) }}
        {% endif %}
      {% else %}
        undefined
      {% endif %}
    unit_of_measurement: "GB per day"

  - platform: command_line
    command: cal $(date +"%m %Y") | awk 'NF {DAYS = $NF}; END {print DAYS}'
    name: Days In Current Month
    scan_interval: 3600

        ##########################################################
        ## History Stats
        ##########################################################

  - platform: history_stats
    name: Downstairs AC On Today
    entity_id: sensor.downstairs_thermostat_hvac_state
    state: 'cooling'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Upstairs AC On Today
    entity_id: sensor.upstairs_thermostat_hvac_state
    state: 'cooling'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Downstairs AC On Week
    entity_id: sensor.downstairs_thermostat_hvac_state
    state: 'cooling'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Upstairs AC On Week
    entity_id: sensor.upstairs_thermostat_hvac_state
    state: 'cooling'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Downstairs Heat On Today
    entity_id: sensor.downstairs_thermostat_hvac_state
    state: 'heating'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Upstairs Heat On Today
    entity_id: sensor.upstairs_thermostat_hvac_state
    state: 'heating'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Downstairs Heat On Week
    entity_id: sensor.downstairs_thermostat_hvac_state
    state: 'heating'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: Upstairs Heat On Week
    entity_id: sensor.upstairs_thermostat_hvac_state
    state: 'heating'
    type: time
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'
